// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Online_Learning_Platform.Data;

#nullable disable

namespace Online_Learning_Platform.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Online_Learning_Platform.Models.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CourseCreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("CourseImage")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CourseProviderId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CourseUpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("CourseId");

                    b.HasIndex("CourseProviderId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Online_Learning_Platform.Models.CourseProvider", b =>
                {
                    b.Property<string>("CourseProviderId")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CourseProviderBirthday")
                        .HasColumnType("date");

                    b.Property<string>("CourseProviderDescription")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("CourseProviderEmail")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CourseProviderImage")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("CourseProviderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CourseProviderPassword")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("CourseProviderId");

                    b.ToTable("CourseProviders");
                });

            modelBuilder.Entity("Online_Learning_Platform.Models.Lesson", b =>
                {
                    b.Property<string>("LessonId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LessonCreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("LessonDescription")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("LessonImage")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("LessonIsDone")
                        .HasColumnType("bit");

                    b.Property<string>("LessonName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LessonUpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("LessonVideo")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("LessonId");

                    b.HasIndex("CourseId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("Online_Learning_Platform.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UserBirthday")
                        .HasColumnType("date");

                    b.Property<string>("UserDescription")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserImage")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Online_Learning_Platform.Models.UserCourse", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CourseId")
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("UserCourses");
                });

            modelBuilder.Entity("Online_Learning_Platform.Models.Course", b =>
                {
                    b.HasOne("Online_Learning_Platform.Models.CourseProvider", "CourseProvider")
                        .WithMany("Courses")
                        .HasForeignKey("CourseProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseProvider");
                });

            modelBuilder.Entity("Online_Learning_Platform.Models.Lesson", b =>
                {
                    b.HasOne("Online_Learning_Platform.Models.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Online_Learning_Platform.Models.UserCourse", b =>
                {
                    b.HasOne("Online_Learning_Platform.Models.Course", "Course")
                        .WithMany("UserCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Online_Learning_Platform.Models.User", "User")
                        .WithMany("UserCourses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Online_Learning_Platform.Models.Course", b =>
                {
                    b.Navigation("Lessons");

                    b.Navigation("UserCourses");
                });

            modelBuilder.Entity("Online_Learning_Platform.Models.CourseProvider", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Online_Learning_Platform.Models.User", b =>
                {
                    b.Navigation("UserCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
