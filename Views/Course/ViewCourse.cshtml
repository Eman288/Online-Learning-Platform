@model Online_Learning_Platform.Models.Course

@* For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860 *@
@using Newtonsoft.Json;

@{
    var lessonData = ViewData["Lessons"] as List<Lesson> ?? new List<Lesson>();
    var LessonJson = JsonConvert.SerializeObject(lessonData, new JsonSerializerSettings
            {
                ReferenceLoopHandling = ReferenceLoopHandling.Ignore
            });

    var msg = ViewData["Message"] != null ? (int)ViewData["Message"] : 1;

    if (msg == 0)
    {
        <script>
            alert("Can't Delete the Course, There are Users Assigned to It");
        </script>
    }
}

<head>
    <style>
        footer {
            display: none;
        }

        .main {
            height: 90%;
        }

        /* course edit */
        .save-edit-course, .save-edit-lesson {
            display: none;
        }

        .lesson-details {
            display: none;
        }
    </style>
</head>

<section class="course-block">
    <div class="lessons-area">
        <div class="lesson-tools">
            <p onclick="showCourseDetails()">@Model.CourseName</p>
            <img src="~/img/add.png" alt="add" onclick="LessonCreate()" />
        </div>

        <div class="lessons">
            <!-- Lessons will appear here -->
        </div>
    </div>

    <div class="course-details">
        <a onclick="DeleteCourse(@Model.CourseId)" style="text-align: start">
            <img src="~/img/delete.png" alt="delete" />
        </a>

        <a onclick="EditCourse()">
            <img src="~/img/edit.png" alt="edit" />
        </a>

        <div style="grid-column: 1/3;">
            <form asp-controller="Course" asp-action="EditData" method="post" enctype="multipart/form-data">
                <input id="id" name="id" value="@Model.CourseId" asp-for="CourseId" readonly hidden />

                <div class="course-name">
                    <label for="courseName">Course Name</label>
                    <input id="courseName" name="courseName" type="text" maxlength="50" required asp-for="CourseName" value="@Model.CourseName" readonly />
                </div>

                <div class="course-des">
                    <label for="courseDes">Course Description</label>
                    <textarea id="courseDes" name="courseDes" maxlength="250" required asp-for="CourseDescription" readonly>@Model.CourseDescription</textarea>
                </div>

                <div class="course-img">
                    <label for="courseImage">Course Image</label>
                    <input id="courseImage" name="courseImage" type="file" accept="image/*" />
                </div>

                <img src="@Model.CourseImage" alt="courseImage" />

                <button class="save-edit-course" type="submit">Save</button>
            </form>
        </div>
    </div>





    <div class="lesson-details">
        // lesson details show here
    </div>




    <section class="lesson-creation" style="transform: translateY(-1000px); transition: transform 0.5s;">
        <h4>Lesson Creation</h4>

        <form asp-controller="Lesson" asp-action="CreateLesson" method="post" enctype="multipart/form-data">

            <input type="number" value="@Model.CourseId" name="courseId" id="CourseId" hidden readonly />
            <div>
                <label for="LessonName">Lesson Name</label>
                <input id="LessonName" name="LessonName" type="text" maxlength="50" required style="border-bottom: 3px solid var(--second-main-color); padding: 2%;" />
            </div>

            <div>
                <label for="LessonDes">Lesson Description</label>
                <textarea id="LessonDes" name="LessonDes" maxlength="250" required style="border-bottom: 3px solid var(--second-main-color); padding: 2%;"></textarea>
            </div>

            <div class="img">
                <label for="LessonImage">Lesson Image</label>
                <input id="LessonImage" name="img" type="file" accept="image/*">
            </div>

            <div class="video">
                <label for="LessonVideo">Lesson Video</label>
                <input id="LessonVideo" name="video" type="file" accept="video/*">
            </div>

            <button type="submit">Create</button>
        </form>
        <button onclick="CancelCreation()">Cancel</button>
    </section>

</section>

<script>
    let currentLesson = 0;
    // data for course
    let button = document.querySelector('.save-edit-course');
    let courseName = document.querySelector('#courseName');
    let courseDes = document.querySelector('#courseDes');
    let courseImg = document.querySelector('.course-img');


    let courseDetails = document.querySelector('.course-details');
    let lessonDetails = document.querySelector('.lesson-details');

    const lessons = @Html.Raw(LessonJson);



    document.addEventListener("DOMContentLoaded", function () {
        button.style.display = "none"; // hide the submit button
        courseName.setAttribute('readonly', '');  // make course name read-only
        courseDes.setAttribute('readonly', ''); // make course description read-only
        courseImg.style.display = "none"; // hide the course image section
        lessonDetails.style.display = "none"; // hide the lesson details area on load
        if (lessons.length === 0) {
            document.querySelector('.lessons').innerHTML = 'No Lessons here';
        } else {
            let i = 1;
            lessons.forEach((element) => {
                viewLesson(element.LessonId, element.LessonName, i);
                i++;
            });
        }
        console.log(lessons);
    });


    // Function to show lesson creation form
    function LessonCreate() {
        let courseBlock = document.querySelector('.lesson-creation');
        courseBlock.style.display = "grid";
        courseBlock.style.transform = "translateY(0px)";
    }

    // Function to cancel lesson creation
    function CancelCreation() {
        let courseBlock = document.querySelector('.lesson-creation');
        courseBlock.style.transform = "translateY(-1000px)";
    }

    // Function to create the lesson div
    function viewLesson(id, name, inx) {
        let lessonDiv = document.createElement('div');
        lessonDiv.className = "lesson-item"; // Add a CSS class for styling
        lessonDiv.innerHTML = `<strong>Lesson ${inx}: </strong>${name}`;
        lessonDiv.onclick = () => ViewLessonDetails(inx - 1); // Correct reference
        document.querySelector('.lessons').appendChild(lessonDiv);
    }


    // Edit Course
    function EditCourse() {
        button.style.display = "block"; // show the submit button
        courseName.removeAttribute('readonly'); // allow editing of course name
        courseDes.removeAttribute('readonly'); // allow editing of course description
        courseImg.style.display = "block"; // show the image upload section
    }

    // Function to delete a course
    function DeleteCourse(id) {
        let option = confirm("Are you sure you want to delete this course?");
        if (option) {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = `/Course/DeleteCourse`;

            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'Id'; // Match the parameter name in your action
            input.value = id;

            form.appendChild(input);
            document.body.appendChild(form);
            form.submit(); // Submit the form
        }
    }

    // view course details
    function showCourseDetails() {
        courseDetails.style.display = "grid";
        lessonDetails.style.display = "none";
    }

    // view lesson details
    function ViewLessonDetails(inx) {
        courseDetails.style.display = "none";
        lessonDetails.style.display = "grid";

        let lesson = lessons[inx];

        // displaying the lesson details
        lessonDetails.innerHTML = `
                     <a onclick="DeleteLesson(${lesson.LessonId})" style="text-align: start">
                    <img src="/img/delete.png" alt="delete" />
                </a>

                <a onclick="EditLesson()" style="text-align:end;">
                    <img src="/img/edit.png" alt="edit" />
                </a>

                <div style="grid-column: 1 / 3;">
                        <form action="/Lesson/EditData" method="post" enctype="multipart/form-data">
                            <input id="id" name="id" value="${lesson.LessonId}" readonly hidden />

                        <div class="lesson-name">
                                <label for="lessonName">Lesson Name</label>
                            <input id="lessonName" name="lessonName" type="text" maxlength="50" required value="${lesson.LessonName}" readonly />
                        </div>

                        <div class="lesson-des">
                            <label for="lessonDes">Lesson Description</label>
                             <textarea id="lessonDes" name="lessonDes" maxlength="250" required readonly>${lesson.LessonDescription}</textarea>
                        </div>

                        <div class="video">
                            <label for="lessonVideo">Lesson Video</label>
                            <input id="lessonVideo" name="video" type="file" accept="video/*" />
                        </div>

                            <div class="image">
                                <label for="lessonImage">Lesson Image</label>
                                <input id="lessonImage" name="img" type="file" accept="image/*" />
                            </div>

                         <div class="lesson-video">
                               ${lesson.LessonVideo ?
                `<video controls poster="${lesson.LessonImage}">
                                        <source src="${lesson.LessonVideo}" type="video/mp4">
                                    Your browser does not support the video tag.
                                </video>` :
                `<img src="${lesson.LessonImage}" alt="lesson image" />`
            }
                         </div>

                        <button class="save-edit-lesson" type="submit">Save</button>
                    </form>
                </div>
            `;
    }

    function EditLesson() {
        let lessonDetails = document.querySelector('.lesson-details'); // Get the lesson-details section
        let buttonL = lessonDetails.querySelector('.save-edit-lesson'); // Find the save button inside the lesson-details
        let lessonName = lessonDetails.querySelector('#lessonName'); // Find the lesson name input inside lesson-details
        let lessonDes = lessonDetails.querySelector('#lessonDes'); // Find the lesson description textarea
        let lessonVideo = lessonDetails.querySelector('.video'); // Find the lesson video input section

        // Display save button for lesson
        buttonL.style.display = "block";
        // Enable editing for the lesson fields
        lessonName.removeAttribute('readonly');
        lessonDes.removeAttribute('readonly');
        lessonVideo.style.display = "block"; // Make sure the video upload section is visible
    }

    // delete the lesson, asks for the confirmation and send the data to the controller to delete
    function DeleteLesson(id) {
        let option = confirm("Are you sure you want to delete this lesson?");
        if (option) {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = `/Lesson/DeleteLesson`;

            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'Id'; // Match the parameter name in your action
            input.value = id;

            form.appendChild(input);
            document.body.appendChild(form);
            form.submit(); // Submit the form
        }
    }
</script>

